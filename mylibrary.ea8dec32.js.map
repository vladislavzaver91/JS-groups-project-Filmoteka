{"mappings":"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","sources":["src/js/onLibraryClick.js","src/js/watchedMovies.js","src/js/utilitiesJS/markupGllery.js","src/js/utilitiesJS/createEmptyLibMessage.js","src/js/queueMovies.js"],"sourcesContent":["import { refs } from './utilitiesJS/refs';\nimport { createMessage } from './utilitiesJS/createEmptyLibMessage';\nimport { onBtnWatchedClick } from './watchedMovies';\nimport { onBtnQueueClick } from './queueMovies';\nimport { serverApi } from './utilitiesJS/serverApi';\n\nonMyLibraryClick();\n\nfunction onMyLibraryClick() {\n  serverApi.setlang(JSON.parse(localStorage.getItem('language')));\n  \n    if (!localStorage.getItem('watch')) {\n    localStorage.setItem('watch', JSON.stringify([]));\n  }\n\n  if (!localStorage.getItem('queue')) {\n    localStorage.setItem('queue', JSON.stringify([]));\n  }\n\n  try {\n    const watch = JSON.parse(localStorage.getItem('watch'));\n    const queue = JSON.parse(localStorage.getItem('queue'));\n\n    if (watch && watch.length !== 0) {\n      onBtnWatchedClick();\n      return;\n    } else if ((queue && queue.length !== 0 && !watch) || watch.length === 0) {\n      onBtnQueueClick();\n      return;\n    } else {\n      refs.galleryLibrary.insertAdjacentHTML('beforeend', createMessage());\n      return;\n    }\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n","import Pagination from 'tui-pagination';\nimport Notiflix from 'notiflix';\nimport { refs } from './utilitiesJS/refs';\nimport { movieDescriptionMurkup } from './descriptionMurkup';\nimport { serverApi } from './utilitiesJS/serverApi';\nimport { onAddQueueClick, onAddWatchClick } from './addFavorites';\nimport { closeModal, onOpenModal } from './modal';\nimport { options } from './pagination';\nimport {\n  makeQueueTextContent,\n  makeWatchTextContent,\n} from './utilitiesJS/modalBtnTextContent';\nimport { handleClick } from './treiler';\nimport { createMessage } from './utilitiesJS/createEmptyLibMessage';\nimport { murkupGallery } from './utilitiesJS/markupGllery';\nimport { markupCast } from './utilitiesJS/markupCast';\n\nrefs.btnWathed.addEventListener('click', onBtnWatchedClick);\n\nexport function onBtnWatchedClick() {\n  refs.btnWathed.dataset.watch = 'active';\n  refs.btnQueue.dataset.queue = '';\n\n  try {\n    const watched = JSON.parse(localStorage.getItem('watch'));\n\n    if (!watched || watched.length === 0) {\n      refs.galleryLibrary.innerHTML = createMessage();\n      refs.tuiContainer.classList.add('visually-hidden');\n      return;\n    } else {\n      options.totalItems = watched.length;\n      let start = 0;\n      let end = 20;\n\n      const handleSlice = currentPage => {\n        start = currentPage * options.itemsPerPage - 20;\n        end = currentPage * options.itemsPerPage;\n      };\n\n      refs.tuiContainer.classList.remove('visually-hidden');\n      murkupGallery(watched.slice(start, end));\n      const pagination = new Pagination(refs.tuiContainer, options);\n\n      pagination.on('beforeMove', event => {\n        const currentPage = event.page;\n        handleSlice(currentPage);\n        murkupGallery(watched.slice(start, end));\n      });\n    }\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nrefs.galleryLibrary.addEventListener(`click`, onClickMovie);\n\nasync function onClickMovie(e) {\n  if (e.target.parentElement.className !== 'film__item') {\n    return;\n  }\n\n  onOpenModal();\n\n  const id = e.target.parentElement.dataset.id;\n\n  const detailsMovie = await serverApi.getDetailsMovie(id);\n\n  const movieMurkup = await movieDescriptionMurkup(detailsMovie);\n\n  refs.movieDescription.insertAdjacentHTML('beforeend', movieMurkup);\n\n  makeWatchTextContent(detailsMovie);\n  makeQueueTextContent(detailsMovie);\n\n  const watchBtn = document.querySelector('[data-add-watched]');\n  const queueBtn = document.querySelector('[data-add-queue]');\n  const closeModalBtn = document.querySelector('[data-modal-close]');\n  const trailerBtn = document.querySelector('.btn-ytb');\n  const iconTrailerBtn = document.querySelector('.icon-youtube');\n  const castBtn = document.querySelector('[data-cast]');\n\n  watchBtn.addEventListener('click', () => {\n    onAddWatchClick(detailsMovie);\n    const watched = JSON.parse(localStorage.getItem('watch'));\n\n    if (refs.btnWathed.dataset.watch === 'active') {\n      murkupGallery(watched);\n    }\n  });\n\n  queueBtn.addEventListener('click', () => {\n    onAddQueueClick(detailsMovie);\n    const queued = JSON.parse(localStorage.getItem('queue'));\n\n    if (refs.btnQueue.dataset.queue === 'active') {\n      murkupGallery(queued);\n    }\n  });\n\n  serverApi.getTrailer(id).then(({ results }) => {\n    if (results.length !== 0) {\n      iconTrailerBtn.classList.add('icon-youtube__enable');\n      iconTrailerBtn.classList.remove('icon-youtube__disabled');\n    } else {\n      iconTrailerBtn.classList.remove('icon-youtube__enable');\n      iconTrailerBtn.classList.add('icon-youtube__disabled');\n      trailerBtn.setAttribute('disabled', true);\n      Notiflix.Notify.failure('Oh! Unfortunately there is no trailer', {\n        position: 'center-top',\n        fontFamily: 'inherit',\n        borderRadius: '25px',\n        clickToClose: true,\n      });\n    }\n  });\n\n  serverApi.getCasts(id).then(data => {\n    if (data.length === 0) {\n      castBtn.setAttribute('disabled', true);\n    }\n  });\n\n  trailerBtn.addEventListener('click', handleClick);\n  castBtn.addEventListener('click', () => markupCast(id));\n\n  closeModalBtn.addEventListener('click', closeModal);\n}\n","import { refs } from './refs';\nimport { poster–°heck } from './posterCheck';\nimport { genresArr, genresUK } from './genres';\nimport { createMessage } from './createEmptyLibMessage';\nimport { makeGenres } from './makeGenres';\nimport { makeDate } from './makeReleaseDate';\n\nexport function murkupGallery(movies) {\n  if (!movies.length) {\n    refs.tuiContainer.classList.add('visually-hidden');\n    return (refs.galleryLibrary.innerHTML = createMessage());\n  }\n\n  const moviesMurkup = movies\n    .map(({ original_title, title, poster_path, id, genres, release_date }) => {\n      const genresId = genres.map(genre => genre.id);\n      const src = poster–°heck(poster_path);\n\n      return `\n          <li class=\"film__item\" data-id=\"${id}\">\n          <img src=\"${src}\" class=\"film__img\" alt=\"${original_title}\" />\n          <p class=\"film__title\">${title}</p>\n          <p class=\"film__genre\">${makeGenres(genresId)} | ${makeDate(\n        release_date\n      )}</p>\n        </li>`;\n    })\n    .join(``);\n\n  return (refs.galleryLibrary.innerHTML = moviesMurkup);\n}\n","export function createMessage() {\n  const messageMarkup = `<div class=\"message-wrap\" >\n      <p class=\"sorry\">Sorry...</p>\n      <p class=\"message\">\n        You haven't added any movies yet. Hope you fix this soon :)\n      </p>\n      <a href=\"./index.html\" class=\"library__button accent\">Filmoteka</a>\n    </div>`;\n  return messageMarkup;\n}\n","import Pagination from 'tui-pagination';\n\nimport { refs } from './utilitiesJS/refs';\nimport { options } from './pagination';\nimport { createMessage } from './utilitiesJS/createEmptyLibMessage';\nimport { murkupGallery } from './utilitiesJS/markupGllery';\n\nrefs.btnQueue.addEventListener('click', onBtnQueueClick);\n\nexport function onBtnQueueClick() {\n  refs.btnWathed.dataset.watch = '';\n  refs.btnQueue.dataset.queue = 'active';\n\n  try {\n    const queue = JSON.parse(localStorage.getItem('queue'));\n\n    if (!queue || queue.length === 0) {\n      refs.galleryLibrary.innerHTML = createMessage();\n      refs.tuiContainer.classList.add('visually-hidden');\n      return;\n    } else {\n      options.totalItems = queue.length;\n      let start = 0;\n      let end = 20;\n\n      const handleSlice = currentPage => {\n        start = currentPage * options.itemsPerPage - 20;\n        end = currentPage * options.itemsPerPage;\n      };\n\n      refs.tuiContainer.classList.remove('visually-hidden');\n      murkupGallery(queue.slice(start, end));\n\n      const pagination = new Pagination(refs.tuiContainer, options);\n\n      pagination.on('beforeMove', event => {\n        const currentPage = event.page;\n        handleSlice(currentPage);\n        murkupGallery(queue.slice(start, end));\n      });\n    }\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n"],"names":["$hiFhO","parcelRequire","$bpxeT","$680787a72f3ad581$export$6bb355015a1580b","movies","length","refs","tuiContainer","classList","add","galleryLibrary","innerHTML","moviesMurkup","map","param","original_title","title","poster_path","id","genres","release_date","genresId","genre","src","$9PJ7S","concat","$8UxLt","makeGenres","$9DSPe","makeDate","join","$51943685a991b61a$export$e3cd2a9e9061f2c1","btnWathed","dataset","watch","btnQueue","queue","watched","JSON","parse","localStorage","getItem","$jcFG7","options","totalItems","start","end","remove","slice","$parcel$interopDefault","$1VFfL","on","event","currentPage","itemsPerPage","handleSlice","page","error","console","log","message","$51943685a991b61a$var$_onClickMovie","$2TvXO","mark","_callee","e","detailsMovie","movieMurkup","watchBtn","queueBtn","closeModalBtn","trailerBtn","iconTrailerBtn","castBtn","target","parentElement","className","$5xtVg","onOpenModal","$jaaYu","serverApi","getDetailsMovie","_ctx","sent","$kiFmR","movieDescriptionMurkup","movieDescription","insertAdjacentHTML","$5HOzi","makeWatchTextContent","makeQueueTextContent","document","querySelector","addEventListener","$4cXS4","onAddWatchClick","onAddQueueClick","queued","getTrailer","then","results","setAttribute","$iU1Pc","Notify","failure","position","fontFamily","borderRadius","clickToClose","getCasts","data","$dkUq4","handleClick","$3TKAW","markupCast","closeModal","apply","this","arguments","$82e0fb71ed8d4f6d$export$b055216bf7aaa057","setlang","setItem","stringify","$0f34ab67201c3500$var$onMyLibraryClick"],"version":3,"file":"mylibrary.ea8dec32.js.map"}