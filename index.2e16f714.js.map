{"mappings":"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","sources":["src/index.js","src/js/utilitiesJS/selectLang.js","src/js/utilitiesJS/selectTrend.js","src/js/utilitiesJS/murkupGalleryOnPageLoading.js","src/js/gallery.js","src/js/onSearchForm.js"],"sourcesContent":["import './js/modal';\nimport './js/utilitiesJS/selectLang';\nimport './js/utilitiesJS/selectTrend';\nimport './js/gallery';\nimport './js/onSearchForm';\nimport './js/pagination';\nimport './js/modal-team';\nimport './js/theme-dark';\nimport './js/treiler';\nimport './js/scrollTop';\nimport './js/modal-login';\nimport './js/spinner';\nimport './js/firebase';\n","import { serverApi } from './serverApi';\nimport { refs } from './refs';\n\nrefs.langValue.addEventListener('change', onSelectChange);\n\nif (localStorage.getItem('language')) {\n  const parsedData = JSON.parse(localStorage.getItem('language'));\n  refs.langValue.value = parsedData;\n  serverApi.setlang(parsedData);\n}\n\nfunction onSelectChange(evt) {\n  const language = evt.target.value;\n\n  serverApi.setlang(language);\n\n  localStorage.setItem('language', JSON.stringify(language));\n\n  location.reload();\n}\n","import { serverApi } from './serverApi';\nimport { refs } from './refs';\n\nrefs.trend.addEventListener('change', onSelectChange);\n\nif (localStorage.getItem('selected-trend')) {\n  const parsedData = JSON.parse(localStorage.getItem('selected-trend'));\n  refs.trend.value = parsedData;\n  serverApi.setTrend(parsedData);\n}\n\nfunction onSelectChange(evt) {\n  const trend = evt.target.value;\n\n  serverApi.setTrend(trend);\n\n  localStorage.setItem('selected-trend', JSON.stringify(trend));\n\n  location.reload();\n}\n","import Pagination from 'tui-pagination';\n\nimport { refs } from './refs';\nimport { serverApi } from './serverApi';\nimport { posterСheck } from './posterCheck';\nimport { options } from '../pagination';\nimport { spinnerPlay, spinnerStop } from '../spinner';\nimport { spinnerPlay, spinnerStop } from '../spinner';\nimport { makeGenres } from './makeGenres';\nimport { makeDate } from './makeReleaseDate';\n\nconst pagination = new Pagination(refs.tuiContainer, options);\n\nspinnerPlay(); // ! не пересовувати\n\npagination.on('beforeMove', async event => {\n  spinnerPlay();\n  pagination.setTotalItems(serverApi.totalResults);\n\n  if (refs.trend.value === 'top' || refs.trend.value === 'popular') {\n    pagination.setTotalItems(10000);\n    serverApi.setTotalResults(10000);\n  } else {\n    pagination.setTotalItems(serverApi.totalResults);\n  }\n\n  const currentPage = event.page;\n  serverApi.setPage(currentPage);\n  murkupGallery();\n});\n\nexport function murkupGalleryOnPageLoading(movies) {\n  if (!JSON.parse(localStorage.getItem('language'))) {\n    localStorage.setItem('language', JSON.stringify(refs.langValue.value));\n  }\n\n  serverApi.setPage(1);\n\n  const moviesMurkup = movies\n\n    .map(\n      ({ original_title, title, poster_path, id, genre_ids, release_date }) => {\n        const src = posterСheck(poster_path);\n\n        const genres = makeGenres(genre_ids);\n\n        return `\n        <li class=\"film__item\" data-id=\"${id}\">\n        <img src=\"${src}\" class=\"film__img\" alt=\"${original_title}\" />\n        <div>\n        <p class=\"film__title\">${title}</p>\n        <p class=\"film__genre\">${genres} | ${makeDate(release_date)}</p></div>\n      </li>`;\n      }\n    )\n    .join(``);\n\n  return (refs.gallery.innerHTML = moviesMurkup);\n}\n\nexport async function murkupGallery() {\n  try {\n    let movies = [];\n\n    if (refs.trend.value === 'top') {\n      movies = await serverApi.getTop();\n    } else if (refs.trend.value === 'popular') {\n      movies = await serverApi.getPopular();\n    } else {\n      movies = await serverApi.getPopularMovie();\n    }\n\n    serverApi.setTotalResults(movies.total_results);\n    murkupGalleryOnPageLoading(movies.results);\n  } catch (error) {\n    console.log(error);\n  }\n\n  spinnerStop();\n}\n","import 'simplelightbox/dist/simple-lightbox.min.css';\nimport Notiflix from 'notiflix';\nimport { refs } from './utilitiesJS/refs';\nimport { serverApi } from './utilitiesJS/serverApi';\nimport { murkupGallery } from './utilitiesJS/murkupGalleryOnPageLoading';\nimport { movieDescriptionMurkup } from './descriptionMurkup';\nimport { closeModal, onOpenModal } from './modal';\nimport { onAddQueueClick, onAddWatchClick } from './addFavorites';\nimport {\n  makeQueueTextContent,\n  makeWatchTextContent,\n} from './utilitiesJS/modalBtnTextContent';\nimport { handleClick } from './treiler';\nimport { spinnerPlay, spinnerStop } from './spinner';\nimport { markupCast } from './utilitiesJS/markupCast';\n\nmurkupGallery();\n\nrefs.gallery.addEventListener(`click`, onClickMovie);\n\nasync function onClickMovie(e) {\n  if (e.target.parentElement.className !== 'film__item') {\n    return;\n  }\n\n  onOpenModal();\n\n  spinnerPlay();\n\n  const id = e.target.parentElement.dataset.id;\n\n  const detailsMovie = await serverApi.getDetailsMovie(id);\n\n  const movieMurkup = await movieDescriptionMurkup(detailsMovie);\n\n  refs.movieDescription.insertAdjacentHTML('beforeend', movieMurkup);\n\n  spinnerStop();\n\n  makeWatchTextContent(detailsMovie);\n  makeQueueTextContent(detailsMovie);\n\n  const watchBtn = document.querySelector('[data-add-watched]');\n  const queueBtn = document.querySelector('[data-add-queue]');\n  const closeModalBtn = document.querySelector('[data-modal-close]');\n  const trailerBtn = document.querySelector('.btn-ytb');\n  const iconTrailerBtn = document.querySelector('.icon-youtube');\n  const castBtn = document.querySelector('[data-cast]');\n\n  serverApi.getTrailer(id).then(({ results }) => {\n    if (results.length !== 0) {\n      iconTrailerBtn.classList.add('icon-youtube__enable');\n      iconTrailerBtn.classList.remove('icon-youtube__disabled');\n    } else {\n      iconTrailerBtn.classList.remove('icon-youtube__enable');\n      iconTrailerBtn.classList.add('icon-youtube__disabled');\n      trailerBtn.setAttribute('disabled', true);\n      Notiflix.Notify.failure('Oh! Unfortunately there is no trailer', {\n        position: 'center-top',\n        fontFamily: 'inherit',\n        borderRadius: '25px',\n        clickToClose: true,\n      });\n    }\n  });\n\n  serverApi.getCasts(id).then(data => {\n    if (data.length === 0) {\n      castBtn.setAttribute('disabled', true);\n    }\n  });\n\n  watchBtn.addEventListener('click', () => onAddWatchClick(detailsMovie));\n  queueBtn.addEventListener('click', () => onAddQueueClick(detailsMovie));\n  trailerBtn.addEventListener('click', handleClick);\n  castBtn.addEventListener('click', () => markupCast(id));\n\n  closeModalBtn.addEventListener('click', closeModal);\n}\n","import Notiflix from 'notiflix';\nimport Pagination from 'tui-pagination';\n\nimport { refs } from './utilitiesJS/refs';\nimport { serverApi } from './utilitiesJS/serverApi';\nimport { options } from './pagination';\nimport {\n  murkupGalleryOnPageLoading,\n  murkupGallery,\n} from './utilitiesJS/murkupGalleryOnPageLoading';\nimport { spinnerPlay, spinnerStop } from './spinner';\n\nlet searchQuery = ' ';\nrefs.formRef.addEventListener('submit', onSubmitClick);\n\nasync function onSubmitClick(event) {\n  event.preventDefault();\n\n  spinnerPlay();\n\n  const inputRef = document.querySelector('.header__form-input');\n  inputRef.addEventListener('change', () => {\n    serverApi.setPage(1);\n    serverApi.setRequestCount();\n  });\n\n  searchQuery = event.currentTarget.elements.serch_film.value\n    .trim()\n    .toLowerCase();\n\n  if (!searchQuery) {\n    Notiflix.Notify.failure('Enter the name of the movie', {\n      position: 'center-top',\n      fontFamily: 'inherit',\n      borderRadius: '25px',\n      clickToClose: true,\n    });\n    spinnerStop();\n    return;\n  }\n\n  await murkupSearchMovie();\n\n  spinnerStop();\n\n  const pagination = new Pagination(refs.tuiContainer, options);\n\n  pagination.on('beforeMove', event => {\n    const currentPage = event.page;\n    serverApi.setPage(currentPage);\n    serverApi.incrementRequestCount();\n    murkupSearchMovie();\n  });\n\n  event.target.reset();\n}\n\nexport async function murkupSearchMovie() {\n  const data = await serverApi.getMovieOnDemand(searchQuery);\n  const movies = data.results;\n  const total_results = data.total_results;\n  options.totalItems = total_results;\n\n  if (total_results < 20 && total_results !== 0) {\n    refs.tuiContainer.classList.add('visually-hidden');\n  } else {\n    refs.tuiContainer.classList.remove('visually-hidden');\n  }\n\n  if (movies.length === 0) {\n    murkupGallery();\n    Notiflix.Notify.failure(\n      'Search result not successful. Enter the correct movie name and',\n      {\n        position: 'center-top',\n        fontFamily: 'inherit',\n        borderRadius: '25px',\n        clickToClose: true,\n      }\n    );\n    window.history.go();\n    return;\n  }\n\n  murkupGalleryOnPageLoading(movies);\n}\n"],"names":["parcelRequire","$185lj","refs","langValue","addEventListener","evt","language","target","value","serverApi","setlang","localStorage","setItem","JSON","stringify","location","reload","getItem","parsedData","parse","$3fz09","trend","setTrend","$fb9GJ","$47cbafa11ce31a61$var$pagination","$parcel$interopDefault","tuiContainer","$2nhTy","options","$47cbafa11ce31a61$export$ce0b9808aa57ae7d","movies","setPage","moviesMurkup","map","original_title","title","poster_path","id","genre_ids","release_date","$1fedI","$9zntY","makeGenres","$3gXpH","makeDate","join","gallery","innerHTML","async","$47cbafa11ce31a61$export$6bb355015a1580b","getTop","getPopular","getPopularMovie","setTotalResults","total_results","results","error","console","log","$04jNI","spinnerStop","spinnerPlay","on","event","setTotalItems","totalResults","currentPage","page","e","parentElement","className","$bTcpz","onOpenModal","dataset","detailsMovie","getDetailsMovie","movieMurkup","$it60l","movieDescriptionMurkup","movieDescription","insertAdjacentHTML","$lFT8c","makeWatchTextContent","makeQueueTextContent","watchBtn","document","querySelector","queueBtn","closeModalBtn","trailerBtn","iconTrailerBtn","castBtn","getTrailer","then","length","classList","add","remove","setAttribute","$eWCmQ","Notify","failure","position","fontFamily","borderRadius","clickToClose","getCasts","data","$9Co7P","onAddWatchClick","onAddQueueClick","$c8VpK","handleClick","$6yrCC","markupCast","closeModal","$307187451cbc0239$var$searchQuery","$307187451cbc0239$export$80a6146058001a40","getMovieOnDemand","totalItems","window","history","go","formRef","event1","preventDefault","setRequestCount","currentTarget","elements","serch_film","trim","toLowerCase","incrementRequestCount","reset"],"version":3,"file":"index.2e16f714.js.map"}